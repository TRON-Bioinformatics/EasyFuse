#!/usr/bin/env python

import getpass
import os

# Required user input:
# 1) Which fusion prediction tools should be executed (tools)
# 2) Which post-processing steps should be executed (fd_tools)
# 3) Which reference data shall be used (ref_trans_version & ref_genome_build)
# 4) To whom shall slurm mails be sent to (receiver)

__version__ = "1.3.1"

pipeline_name = "EasyFuse"

#tools=Readfilter,Mapsplice,Fusioncatcher,Star,Starfusion,Infusion,Fetchdata,Summary
tools = ("QC", 
         "Readfilter", 
         "Fusioncatcher", 
         "Star", 
         "Starfusion", 
         "Infusion", 
         "Mapsplice", 
         "Soapfuse", 
         "Fetchdata", 
         "Summary")

fusiontools = ("Fusioncatcher", 
               "Starfusion", 
               "Infusion", 
               "Mapsplice", 
               "Soapfuse")

#fd_tools=Fusiongrep,Contextseq,Starindex,Staralign,Bamindex,Requantify
fd_tools = ("Fusiongrep", 
            "Contextseq", 
            "Starindex", 
            "ReadFilter2", 
            "ReadFilter2b", 
            "StaralignBest", 
            "BamindexBest", 
            "RequantifyBest")

sender = "sender@mail.com"
receiver = "receiver@mail.com"
min_read_len_perc = 0.75
max_dist_proper_pair = 200000
cis_near_distance = 1000000
model_pred_threshold = 0.75
tsl_filter = "4,5,NA"
requant_mode = ["best"]
context_seq_len = 400
ref_genome_build = "hg38"
ref_trans_version = "ensembl"
queueing_system = "slurm"
time_limit = "30-00:00:0"
partition = "Compute"
user = getpass.getuser()
module_dir = os.path.dirname(os.path.realpath(__file__))
#logfile=/data/urla_progs/TronData/ngs_pipelines/easyfuse/fusion.log
#fusion_db=/data/urla_progs/TronData/ngs_pipelines/easyfuse/fusion.db

# Define ressource usage (cpu (number of threads), mem (ram in Gb)):
resources = {
    "qc": {
        "cpu": 6,
        "mem": 10
    },
    "readfilter": {
        "cpu": 6,
        "mem": 50
    },
    "star": {
        "cpu": 6,
        "mem": 40
    },
    "kallisto": {
        "cpu": 6,
        "mem": 10
    },
    "mapsplice": {
        "cpu": 6,
        "mem": 30
    },
    "fusioncatcher": {
        "cpu": 6,
        "mem": 30
    },
    "starfusion": {
        "cpu": 6,
        "mem": 30
    },
    "starchip": {
        "cpu": 12,
        "mem": 30
    },
    "infusion": {
        "cpu": 6,
        "mem": 30
    },
    "soapfuse": {
        "cpu": 6,
        "mem": 20
    },
    "classification": {
        "cpu": 1,
        "mem": 16
    },
    "fetchdata": {
        "cpu": 12,
        "mem": 50
    },
    "summary": {
        "cpu": 1,
        "mem": 16
    }
}

# execution command for individual programs (what you write here should be identical to what is typed in the console)
commands = {
    # for qc
    "fastqc": "/path/to/fastqc_bin",
    "skewer": "/path/to/skewer_bin",
    # for processing
    "mapsplice": "/path/to/mapsplice.py",
    "fusioncatcher": "/path/to/fusioncatcher_bin",
    "starfusion": "/path/to/starfusion_bin",
    "infusion": "/path/to/infusion_bin",
    "soapfuse": "/path/to/SOAPfuse-RUN.pl",
    # for processing and fetch data
    "star": "/path/to/star_bin",
    "samtools": "/path/to/samtools_bin"
    # for liftover
    #"crossmap": "test"
}

# full path to reference files
references = {
    # wget http://ftp.ensembl.org/pub/release-86/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
    "genome_fasta": "/path/to/Homo_sapiens.GRCh38.dna.primary_assembly.fa",
    "genome_fastadir": "/projects/data/human/ensembl/GRCh38.86/fasta",
    "genome_sizes": "/projects/data/human/ensembl/GRCh38.86/STAR_idx/chrNameLength.txt",
    # wget http://ftp.ensembl.org/pub/release-86/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz
    "genes_fasta": "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.cdna.all.fa",
    # wget http://ftp.ensembl.org/pub/release-86/gtf/homo_sapiens/Homo_sapiens.GRCh38.86.chr.gtf.gz
    "genes_gtf": "/path/to/Homo_sapiens.GRCh38.86.gtf",
    "genes_adb": "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.86.gff3.db",
    "genes_tsl": "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.86.gtf.tsl"
}

# full path to program indices
indices = {
    "star": "/projects/data/human/ensembl/GRCh38.86/STAR_idx/",
    "bowtie": "/projects/data/human/ensembl/GRCh38.86/bowtie_index/hg38",
    "starfusion": "/projects/data/human/ensembl/GRCh38.86/starfusion_index/",
    "fusioncatcher": "/projects/data/human/ensembl/GRCh38.86/fusioncatcher_index/"
}

# full path to program specific config files (these are just general files which need no user modification)
other_files = {
    "infusion_cfg": "/projects/data/human/ensembl/GRCh38.86/infusion_index/infusion.cfg",
    "soapfuse_cfg": "/code/SOAPfuse/1.27/config/config_h86.txt",
    "soapfuse_cfg_mm10": "/code/SOAPfuse/1.27/config/config_m95.txt",
    "easyfuse_model": os.path.join(module_dir, "data", "model", "Fusion_modeling_FFPE_deploy_v01.model_full_data.EasyFuse_model.rds")
}

#!/bin/bash
rootPath="/path/to/install/root/directory"

echo "Download miniconda to $rootPath"
cd "$rootPath" && wget "https://repo.anaconda.com/miniconda/Miniconda2-4.5.12-Linux-x86_64.sh"
echo "Install miniconda by answering questions with \"yes\", \"$rootPath/miniconda2\", \"no\""
sh Miniconda2-4.5.12-Linux-x86_64.sh

echo "Create an easyfuse environment and activate it"
condaCmd="$rootPath/miniconda2/bin/conda"
"$condaCmd" create -n easyfuse python=2.7.15
source "$rootPath/miniconda2/bin/activate" easyfuse

echo "Install dependencies from conda-forge..."
"$condaCmd" install -c conda-forge pandas=0.24.0 matplotlib=2.2.3 seaborn=0.9.0 biopython=1.73 xlrd=1.0.0 openpyxl=2.5.0a2
echo "Install dependencies from bioconda..."
"$condaCmd" install -c bioconda pysam=0.15.2 star=2.6.1b star-fusion=1.5.0 bowtie2=2.3.4.3 bx-python=0.8.2 crossmap=0.2.7

echo "Install fusioncatcher and its data ressource"
wget "https://sourceforge.net/projects/fusioncatcher/files/fusioncatcher_v1.00.zip" && unzip fusioncatcher_v1.00.zip
cd "$rootPath/fusioncatcher_v1.00/data"
wget "https://sourceforge.net/projects/fusioncatcher/files/data/human_v90.tar.gz.aa"
wget "https://sourceforge.net/projects/fusioncatcher/files/data/human_v90.tar.gz.ab"
wget "https://sourceforge.net/projects/fusioncatcher/files/data/human_v90.tar.gz.ac"
wget "https://sourceforge.net/projects/fusioncatcher/files/data/human_v90.tar.gz.ad"
wget "https://sourceforge.net/projects/fusioncatcher/files/data/checksums.md5"
md5sum -c checksums.md5 && cat human_v90.tar.gz.a? > human_v90.tar.gz && tar -xf human_v90.tar.gz && rm human_v90.tar.gz.a? && ln -s human_v90/ current

echo "Install fusioncatcher specific dependencies"
cd "$rootPath" && wget "https://sourceforge.net/projects/bowtie-bio/files/bowtie/1.1.2/bowtie-1.1.2-linux-x86_64.zip" && unzip bowtie-1.1.2-linux-x86_64.zip
cd "$rootPath" && wget "https://github.com/alexdobin/STAR/archive/2.5.2b.tar.gz" && tar -xf 2.5.2b.tar.gz
cd "$rootPath" && wget "http://github.com/ndaniel/seqtk/archive/1.2-r101c.tar.gz" && tar -xf 1.2-r101c.tar.gz && cd seqtk-1.2-r101c && make

echo "Auto-adjust fusioncatcher configuration file"
cd "$rootPath/fusioncatcher_v1.00"
sed -i 's, /apps/fusioncatcher,'" $rootPath/fusioncatcher_v1.00"',g' etc/configuration.cfg
sed -i 's,^python = .*$,python = '"$(dirname $(which python))"/',' etc/configuration.cfg
sed -i 's,^bowtie = .*$,bowtie = '"$rootPath/bowtie-1.1.2/"',' etc/configuration.cfg
sed -i 's,^bowtie2 = .*$,bowtie2 = '"$(dirname $(which bowtie2))"/',' etc/configuration.cfg
sed -i 's,^bbmap = .*$,bbmap = '"$(dirname $(which bbmap.sh))"/',' etc/configuration.cfg
sed -i 's,^samtools = .*$,samtools = '"$(dirname $(which samtools))"/',' etc/configuration.cfg
sed -i 's,^seqtk = .*$,seqtk = '"$rootPath/seqtk-1.2-r101c/"',' etc/configuration.cfg
sed -i 's,^star = .*$,star = '"$rootPath/STAR-2.5.2b/bin/Linux_x86_64_static/"',' etc/configuration.cfg
sed -i 's,aligners = blat\,,aligners = ,' etc/configuration.cfg

echo "Download easyfuse"
cd "$rootPath" && git clone "https://gitlab.rlp.net/tron/easyfuse" # this currently requires a pwd
easyfuseRoot="$rootPath/easyfuse"

echo "Download data ressources for easyfuse and star-fusion"
mkdir -p "$rootPath/GenomeData/Ensembl_GRCh38_v90"
mkdir "$rootPath/GenomeData/Ensembl_GRCh37_v90"
mkdir "$rootPath/GenomeData/Crossmap_LiftoverFiles"
cd "$rootPath/GenomeData" && wget "https://github.com/FusionAnnotator/CTAT_HumanFusionLib/releases/download/CTAT_HumanFusionLib.v0.1.0/CTAT_HumanFusionLib.v0.1.0.dat.gz"

echo "Download GRCh38 and setup data"
cd "$rootPath/GenomeData/Ensembl_GRCh38_v90" && wget "https://ftp.ensembl.org/pub/release-90/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz"
wget "https://ftp.ensembl.org/pub/release-90/gtf/homo_sapiens/Homo_sapiens.GRCh38.90.gtf.gz"
gunzip Homo_sapiens.GRCh38.90.gtf.gz
gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz
ln -s Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.dna.primary_assembly.fasta
echo "Apply easyfuse specific customization of fasta headers and perform gtf -> csv conversion"
mkdir chromosomes_PAG
"$easyfuseRoot/ref_data/reformat_genome_fasta.py" -i Homo_sapiens.GRCh38.dna.primary_assembly.fasta -o chromosomes_PAG
samtools faidx Homo_sapiens.GRCh38.dna.primary_assembly_SH.fa
ln -s Homo_sapiens.GRCh38.dna.primary_assembly_SH.fa Homo_sapiens.GRCh38.dna.primary_assembly_SH.fasta
ln -s Homo_sapiens.GRCh38.dna.primary_assembly_SH.fa.fai Homo_sapiens.GRCh38.dna.primary_assembly_SH.fasta.fai
"$easyfuseRoot/ref_data/GTFtoCSV.R" -i Homo_sapiens.GRCh38.90.gtf
echo "Generate star index for genome sequence"
mkdir star_genomeIdx_sjdb49
STAR --runThreadN 20 --runMode genomeGenerate --genomeDir star_genomeIdx_sjdb49 --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly_SH.fasta --sjdbGTFfile Homo_sapiens.GRCh38.90.gtf --sjdbOverhang 49
mv Log.out star_genomeIdx_sjdb49.log.out

echo "Download additional genome ressources for GRCh38 -> GRCh37 liftover and do the same stuff as for GRCh38"
cd "$rootPath/GenomeData/Ensembl_GRCh37_v90" && wget "https://ftp.ensembl.org/pub/grch37/release-90/fasta/homo_sapiens/dna/Homo_sapiens.GRCh37.dna.primary_assembly.fa.gz"
wget "https://ftp.ensembl.org/pub/grch37/release-90/gtf/homo_sapiens/Homo_sapiens.GRCh37.87.gtf.gz" # v87 is the correct version as there were no changes between v87 and v90 which apply to grch37
gunzip Homo_sapiens.GRCh37.87.gtf.gz
gunzip Homo_sapiens.GRCh37.dna.primary_assembly.fa.gz
ln -s Homo_sapiens.GRCh37.dna.primary_assembly.fa Homo_sapiens.GRCh37.dna.primary_assembly.fasta
mkdir chromosomes_PAG
"$easyfuseRoot/ref_data/reformat_genome_fasta.py" -i Homo_sapiens.GRCh37.dna.primary_assembly.fasta -o chromosomes_PAG
samtools faidx Homo_sapiens.GRCh37.dna.primary_assembly_SH.fa
ln -s Homo_sapiens.GRCh37.dna.primary_assembly_SH.fa Homo_sapiens.GRCh37.dna.primary_assembly_SH.fasta
ln -s Homo_sapiens.GRCh37.dna.primary_assembly_SH.fa.fai Homo_sapiens.GRCh37.dna.primary_assembly_SH.fasta.fai
"$easyfuseRoot/ref_data/GTFtoCSV.R" -i Homo_sapiens.GRCh37.87.gtf
cd "$rootPath/GenomeData/Crossmap_LiftoverFiles" && wget "https://sourceforge.net/projects/crossmap/files/Ensembl_chain_files/homo_sapiens%28human%29/GRCh38_to_GRCh37.chain.gz"

echo "Generate star-fusion ressource folder (only required for grch38; takes ~10hours to finish)"
cd "$rootPath/GenomeData/Ensembl_GRCh38_v90"
prep_genome_lib.pl --genome_fa Homo_sapiens.GRCh38.dna.primary_assembly_SH.fasta --gtf Homo_sapiens.GRCh38.90.gtf --max_readlength 50 --output_dir ctatGenomeLibLen50 --fusion_anno_lib ../CTAT_HumanFusionLib.v0.1.0.dat.gz --gmap_build
mv ref_annot.cd* ctatGenomeLibLen50/
mv *.out ctatGenomeLibLen50/
mv pipeliner.*.cmds ctatGenomeLibLen50/
mv __loc_chkpts/ ctatGenomeLibLen50/

echo "Auto-generate easyfuse configuration file; all unused commands will get a dummy \"python\" command and a dummy file path"
cd "$easyfuseRoot"
touch dummy.txt
touch dummy.bowtie.rev.2.ebwt
configFile="easyfuse_ivac_config.ini"
echo "# Required user input:" > "$configFile"
echo "# 1) Which fusion prediction tools should be executed (tools)" >> "$configFile"
echo "# 2) Which post-processing steps should be executed (fd_tools)" >> "$configFile"
echo "# 3) Which reference data shall be used (ref_trans_version & ref_genome_build)" >> "$configFile"
echo "# 4) To whom shall slurm mails be sent to (receiver)" >> "$configFile"
echo "[general]" >> "$configFile"
echo "tools=Readfilter,Star,Fusioncatcher,Starfusion,Fetchdata,Summary" >> "$configFile"
echo "fusiontools=Fusioncatcher,Starfusion" >> "$configFile"
echo "fd_tools=Fusiongrep,Liftover,Contextseq,Starindex,StaralignFltr,BamindexFltr,RequantifyFltr,StaralignOrg,BamindexOrg,RequantifyOrg" >> "$configFile"
echo "context_seq_len=400" >> "$configFile"
echo "max_dist_proper_pair=200000" >> "$configFile"
echo "model_pred_threshold=0.75" >> "$configFile"
echo "time_limit=03:00:00" >> "$configFile"
echo "ref_trans_version=ensembl" >> "$configFile"
echo "ref_genome_build=grch38" >> "$configFile"
echo "sender=ivac_fusion_bot@biontech.de" >> "$configFile"
echo "receiver=urs.lahrmann@biontech.de" >> "$configFile"
echo "queueing_system=slurm" >> "$configFile"
echo "" >> "$configFile"
echo "# Define ressource usage (cpu (number of threads), mem (ram in Gb)):" >> "$configFile"
echo "[resources]" >> "$configFile"
echo "qc=6,10" >> "$configFile"
echo "readfilter=15,40" >> "$configFile"
echo "star=18,40" >> "$configFile"
echo "kallisto=6,10" >> "$configFile"
echo "mapsplice=18,30" >> "$configFile"
echo "fusioncatcher=18,30" >> "$configFile"
echo "starfusion=12,30" >> "$configFile"
echo "starchip=12,30" >> "$configFile"
echo "infusion=12,30" >> "$configFile"
echo "pizzly=6,10" >> "$configFile"
echo "classification=1,16" >> "$configFile"
echo "fetchdata=12,64" >> "$configFile"
echo "summary=1,16" >> "$configFile"
echo "" >> "$configFile"
echo "# execution command for individual programs (what you write here should be identical to what is typed in the console)" >> "$configFile"
echo "[commands]" >> "$configFile"
echo "# for qc" >> "$configFile"
echo "fastqc_cmd=python" >> "$configFile"
echo "qc_parser_cmd=python" >> "$configFile"
echo "skewer_cmd=python" >> "$configFile"
echo "skewer_wrapper_cmd=python" >> "$configFile"
echo "# for processing" >> "$configFile"
echo "kallisto_cmd=python" >> "$configFile"
echo "mapsplice_cmd=python" >> "$configFile"
echo "fusioncatcher_cmd=$rootPath/fusioncatcher_v1.00/bin/fusioncatcher.py" >> "$configFile"
echo "pizzly_cmd=python" >> "$configFile"
echo "pizzly_cmd2=python" >> "$configFile"
echo "starfusion_cmd=STAR-Fusion" >> "$configFile"
echo "starchip_cmd=python" >> "$configFile"
echo "infusion_cmd=python" >> "$configFile"
echo "soapfuse_cmd=python" >> "$configFile"
echo "soapfuse_wrapper_cmd=python" >> "$configFile"
echo "# for processing and fetch data" >> "$configFile"
echo "star_cmd=STAR" >> "$configFile"
echo "samtools_cmd=samtools" >> "$configFile"
echo "trinity_cmd=python" >> "$configFile"
echo "# for liftover" >> "$configFile"
echo "crossmap_cmd=CrossMap.py" >> "$configFile"
echo "" >> "$configFile"
echo "# full path to reference files" >> "$configFile"
echo "[references]" >> "$configFile"
echo "ensembl_genome_fasta_grch38=$rootPath/GenomeData/Ensembl_GRCh38_v90/Homo_sapiens.GRCh38.dna.primary_assembly_SH.fasta" >> "$configFile"
echo "ensembl_genome_fastadir_grch38=$rootPath/GenomeData/Ensembl_GRCh38_v90/chromosomes_PAG" >> "$configFile"
echo "ensembl_genome_sizes_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_genes_fasta_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_genes_gtf_grch38=$rootPath/GenomeData/Ensembl_GRCh38_v90/Homo_sapiens.GRCh38.90.gtf" >> "$configFile"
echo "ensembl_genes_csv_grch38=$rootPath/GenomeData/Ensembl_GRCh38_v90/Homo_sapiens.GRCh38.90.csv" >> "$configFile"
echo "ensembl_genome_fastadir_grch37=$rootPath/GenomeData/Ensembl_GRCh37_v90/chromosomes_PAG" >> "$configFile"
echo "ensembl_genes_csv_grch37=$rootPath/GenomeData/Ensembl_GRCh37_v90/Homo_sapiens.GRCh37.87.csv" >> "$configFile"
echo "" >> "$configFile"
echo "# full path to program indices" >> "$configFile"
echo "[indices]" >> "$configFile"
echo "ensembl_star_grch38_sjdb49=$rootPath/GenomeData/Ensembl_GRCh38_v90/star_genomeIdx_sjdb49" >> "$configFile"
echo "ensembl_star_grch38_trans=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_kallisto_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_salmon_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_bowtie_grch38=$easyfuseRoot/dummy.bowtie" >> "$configFile"
echo "ensembl_starfusion_grch38=$rootPath/GenomeData/Ensembl_GRCh38_v90/ctatGenomeLibLen50" >> "$configFile"
echo "" >> "$configFile"
echo "# full path to program specific config files (these are just general files which need no user modification)" >> "$configFile"
echo "[otherFiles]" >> "$configFile"
echo "ensembl_starchip_param_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "ensembl_infusion_cfg_grch38=$easyfuseRoot/dummy.txt" >> "$configFile"
echo "easyfuse_model=$easyfuseRoot/data/model/Fusion_modeling_IVAC_BNT_v17.model.requant_breakpoint_org.rds" >> "$configFile"
echo "" >> "$configFile"
echo "[easyfuse_helper]" >> "$configFile"
echo "dependencies=$easyfuseRoot/dependency_versions.txt" >> "$configFile"
echo "" >> "$configFile"
echo "# required crossmap cmds/data in case you use the incooperated liftover capabilities" >> "$configFile"
echo "[liftover]" >> "$configFile"
echo "crossmap_chain=$rootPath/GenomeData/Crossmap_LiftoverFiles/GRCh38_to_GRCh37.chain.gz" >> "$configFile"

echo "Test easyfuse installation"
"$easyfuseRoot/processing.py" -i "$easyfuseRoot/test_case" -o "$easyfuseRoot/test_case/easyfuse_out" -u urla -c "$easyfuseRoot/$configFile"

DIFF=$(diff -q "$easyfuseRoot/test_case/test_out/FusionSummary/SRR1659960_05pc_fusRank_1.csv" "$easyfuseRoot/mnt/bfx/urla/easyfuse_release_v1/test_case/SRR1659960_05pc_refOut.csv")
if [ ! "$DIFF" ]; then
  echo "Looks like everything is working just fine :-)"
else
  echo "The output differs from the reference. Please contact the authors to resolve this issue!"
fi

